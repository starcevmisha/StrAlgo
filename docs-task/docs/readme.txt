TEST В архиве четыре задачи: task-Zfunc, task-Match2d и task-LZW, состоящая из двух подзадач. Условия можно прочитать в соответствующих txt файлах. Вам нужно дописать работающий код и послать решения на dkosolobov@gmail.com. Все задания содержат какие-то несложные первоначальные тесты в функции Main, чтобы отловить элементарные баги. Решения должны проходить эти тесты (если решите только первую подзадачу task-LZW, то можно проходить только связанные с ней тесты, закомментировав строки 18 и 19). Тем не менее, решение, проходящее тесты, может быть не принято в следующих случаях:
1) решение не проходит какой-то другой несложный тест, не включенный в первоначальные тесты;
2) потребляемая решением память не соответствует требуемой в задаче;
3) асимптотическое время работы решения не соответствует требуемому в задаче.

TEST
Оптимизация быстродействия - это нетривиальная техническая задача, далеко не всегда напрямую связанная с асимтотикой (в основном сводится к оптимизации доступа к кеш линиям), и обсуждение таких оптимизаций - хоть и очень интересно, но не является частью данного курса. Поэтому я решил не измерять быстродействие, а смотреть на асимтотику самого решения. Тут есть подводные камни: LINQ может случайно сделать линейный алгоритм квадратичным, если вы не знаете как LINQ работает, а Dictionary и HashSet имеют теоретическое время выполнения O(n), а не O(1). Заметьте, я не призываю отказаться от Dictionary и HashSet в обычной практике - это хорошие хеш таблицы, обычно превосходящие SortedDictionary и SortedSet по скорости - но в рамках этого курса хочется видеть, что вы понимаете, что такое асимптотика, и можете добиться гарантированного времени выполнения, когда это нужно.
TEST